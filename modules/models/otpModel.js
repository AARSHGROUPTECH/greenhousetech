// models/otpModel.js
const mongoose = require("mongoose");
const mailSender = require("../utils/mailSender ");
const adminModel = require("./adminModel");

const otpSchema = new mongoose.Schema({
  email: {
    type: String,
    required: true,
  },
  otp: {
    type: String,
    required: true,
  },
  createdAt: {
    type: Date,
    default: Date.now,
    expires: 60 * 5, // The document will be automatically deleted after 5 minutes of its creation time
  },
});

// Define a function to send emails
async function sendVerificationEmail(email, otp) {
  try {
    const mailResponse = await mailSender(
      email,
      "Verification Email OTP",
      `Hi! Dear <b> ${email}</b> üôè ,<br><br> <p> Please find OTP and continue your Work. <br> here is your OTP code: <b>${otp}</b></p> <br> <h4> <p> Note : - </p> Don't share credential to anyone. <br> Make sure this credential generated by itself <br> </h4> Thank You! ‚ù§üôè`
    );

    console.log("Email sent successfully: ", mailResponse);
  } catch (error) {
    console.log("Error occurred while sending email: ", error);
    throw error;
  }
}

otpSchema.pre("save", async function (next) {
  console.log("New document saved to the database");
  // Only send an email when a new document is created
  if (this.isNew) {
    await sendVerificationEmail(this.email, this.otp);
  }
  next();
});
module.exports = mongoose.model("Otp", otpSchema);
